<?php namespace Demo\Tenant\Controllers;

use Backend\Behaviors\FormController;
use Backend\Classes\Controller;
use BackendMenu;
use Demo\Core\Classes\Helpers\PluginConnection;
use Demo\Core\Classes\Utils\ReflectionUtil;
use Demo\Core\Controllers\AbstractSecurityController;
use Demo\Core\Models\EngineApplication;
use Demo\Tenant\Services\TenantService;

class TenantController extends AbstractSecurityController
{
    public $implement = ['Backend\Behaviors\ListController', 'Backend\Behaviors\FormController'];

    public $listConfig = 'config_list.yaml';
    public $formConfig = 'config_form.yaml';

    public function __construct()
    {
        parent::__construct();
        BackendMenu::setContext('Demo.Tenant', 'main-menu-item', 'side-menu-item');
    }

    public function formBeforeCreate($model)
    {
        $formWidget = ReflectionUtil::getPropertyValue(FormController::class, 'formWidget', $this->asExtension('FormController'));
        $formData = (object)$formWidget->getSaveData();
        $brandSettings = [];
        foreach ($formData as $param => $value) {
            if (strpos($param, '__brand_setting_')) {
                $brandSettings[str_replace('$brandSettings', '', $param)] = $value;
            }
        }
        try {
            $database = $formData->code;
            $applications = EngineApplication::where('active', true)->get();
            $tenantService = new TenantService(null);
            $tenantService->createDatabase($database);
            $tenantService->configureConnectionByName($database);
            $tenantService->runMigration($database);
            $tenantService->runSeeds($database, $applications);
            $tenantService->setTheme($database, $formData->default_theme);
            $tenantService->setBrandSettings($database, $brandSettings);
        } catch (\Exception $exception) {
            try {
                $tenantService->dropDatabase($formData->code);
            } catch (\Exception $ex) {

            }
            PluginConnection::getLogger('demo.core')->debug('Tenant creation failed , dropping the db ' . json_encode($formData));
            throw $exception;
        }
        return parent::formBeforeCreate($model); // TODO: Change the autogenerated stub
    }
}
